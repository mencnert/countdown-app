{"version":3,"sources":["utils.js","App.js","reportWebVitals.js","index.js"],"names":["formatDurationV2","secs","sign","days","Math","floor","hours","minutes","seconds","App","React","useState","duration","setDuration","time","setTime","useEffect","url_string","window","location","href","c","URL","searchParams","get","intervalId","setInterval","launch","Date","now","console","clear","log","toISOString","diff","round","clearInterval","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAaA,G,MAAmB,SAACC,GAC/B,IAAMC,EAAOD,GAAQ,EAAI,IAAM,IAC/BA,EAAOA,EAAO,GAAY,EAARA,EAAYA,EAC9B,IAAIE,EAAOC,KAAKC,MAAMJ,EAAO,OACzBK,EAAQF,KAAKC,OAAOJ,EAAe,MAAPE,GAAiB,MAC7CI,EAAUH,KAAKC,OAAOJ,EAAe,MAAPE,EAAyB,KAARG,GAAiB,IAChEE,EAAUP,EAAe,MAAPE,EAAyB,KAARG,EAA2B,GAAVC,EAMxD,OAJIJ,EAAO,KAAMA,EAAO,IAAMA,GAC1BG,EAAQ,KAAMA,EAAQ,IAAMA,GAC5BC,EAAU,KAAMA,EAAU,IAAMA,GAChCC,EAAU,KAAMA,EAAU,IAAMA,GAC9B,GAAN,OAAUN,EAAV,YAAkBC,EAAlB,aAA2BG,EAA3B,aAAqCC,EAArC,aAAiDC,EAAjD,O,OCsBaC,MA9Bf,WACE,MAAgCC,IAAMC,SAAS,GAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBH,IAAMC,SAAS,IAAvC,mBAAOG,EAAP,KAAaC,EAAb,KAqBA,OApBAL,IAAMM,WAAU,WACd,IAAIC,EAAaC,OAAOC,SAASC,KAE7BC,EADM,IAAIC,IAAIL,GACNM,aAAaC,IAAI,KAC7BT,EAAQM,KACP,IACHX,IAAMM,WAAU,WACd,IAAMS,EAAaC,aAAY,WAC7B,IAAMC,EAAS,IAAIC,KAAKd,GAClBe,EAAMD,KAAKC,MACjBC,QAAQC,QACRD,QAAQE,IAAI,SAAUL,EAAOM,eAC7BH,QAAQE,IAAI,SAAU,IAAIJ,KAAKC,GAAKI,eACpC,IAAMC,EAAO9B,KAAK+B,OAAON,EAAMF,GAAU,KACzCG,QAAQE,IAAI,SAAUE,GACtBrB,EAAYqB,KACX,KAEH,OAAO,kBAAME,cAAcX,MAC1B,CAACX,IAEF,sBAAKuB,UAAU,MAAf,eACKrC,EAAiBY,OCjBX0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,K","file":"static/js/main.1adb52bb.chunk.js","sourcesContent":["export const formatDurationV2 = (secs) => {\n  const sign = secs >= 0 ? \"+\" : \"-\"\n  secs = secs < 0 ? secs * -1 : secs\n  var days = Math.floor(secs / 86400);\n  var hours = Math.floor((secs - (days * 86400)) / 3600);\n  var minutes = Math.floor((secs - (days * 86400) - (hours * 3600)) / 60);\n  var seconds = secs - (days * 86400) - (hours * 3600) - (minutes * 60);\n\n  if (days < 10) { days = \"0\" + days; }\n  if (hours < 10) { hours = \"0\" + hours; }\n  if (minutes < 10) { minutes = \"0\" + minutes; }\n  if (seconds < 10) { seconds = \"0\" + seconds; }\n  return `${sign} ${days}d ${hours}h ${minutes}m ${seconds}s`\n}","import React from 'react';\nimport './App.css';\nimport { formatDurationV2 } from \"./utils\"\n\nfunction App() {\n  const [duration, setDuration] = React.useState(0)\n  const [time, setTime] = React.useState(\"\")\n  React.useEffect(() => {\n    var url_string = window.location.href\n    var url = new URL(url_string);\n    var c = url.searchParams.get(\"T\");\n    setTime(c)\n  }, [])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      const launch = new Date(time)\n      const now = Date.now()\n      console.clear()\n      console.log(\"T:    \", launch.toISOString())\n      console.log(\"Now:  \", new Date(now).toISOString())\n      const diff = Math.round((now - launch) / 1000);\n      console.log(\"Diff: \", diff)\n      setDuration(diff)\n    }, 1000)\n\n    return () => clearInterval(intervalId);\n  }, [time])\n  return (\n    <div className=\"App\">\n      T {formatDurationV2(duration)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}